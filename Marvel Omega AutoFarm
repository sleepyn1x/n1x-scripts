local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
if not Rayfield then
    warn("Rayfield module failed to load.")
end

local Window = Rayfield:CreateWindow({
    Name = "n1x Marvel Omega",
    Icon = 0,
    LoadingTitle = "Marvel Omega Autofarm",
    LoadingSubtitle = "by sleepyn1x",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
       Enabled = true,
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink",
       RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = {"Hello"}
    }
})

local PlayerTab = Window:CreateTab("Player", 4483362458)

local Toggle = PlayerTab:CreateToggle({
   Name = "AutoFarm",
   CurrentValue = false,
   Flag = "FarmToggle",
   Callback = function(Value)
      local targetPartName = "Chest"
      local player = game.Players.LocalPlayer
      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
      local isActivatingPrompt = false  

      local function teleportAndActivatePrompt(targetPart)
         local targetBodyPart = targetPart:FindFirstChild("Body")
         if targetBodyPart then
            humanoidRootPart.CFrame = targetBodyPart.CFrame
            local proximityPrompt = targetBodyPart:FindFirstChildOfClass("ProximityPrompt")
            if proximityPrompt and proximityPrompt.Enabled and not isActivatingPrompt then
                isActivatingPrompt = true
                fireproximityprompt(proximityPrompt)
                isActivatingPrompt = false
            end
         else
            warn("Body part not found in " .. targetPart.Name)
         end
      end

      task.spawn(function()
         while Value do
            local targetPart = workspace:FindFirstChild(targetPartName)
            if targetPart then
               teleportAndActivatePrompt(targetPart)
            else
               warn("Target part not found!")
            end
            wait(1)
         end
      end)
   end,
})

local WalkSpeedSlider = PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {10, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 10,
    Flag = "Slider1",
    Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
        humanoid.WalkSpeed = Value
    end,
})

local JumpPowerSlider = PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {10, 500},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = 10,
    Flag = "Slider2",
    Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
        humanoid.JumpPower = Value
    end,
})

local Button = PlayerTab:CreateButton({
    Name = "Teleport to POWERSTONE",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local targetPartName = "PowerStone"
        local targetPart = workspace:FindFirstChild(targetPartName)
        if targetPart then
            humanoidRootPart.CFrame = targetPart.CFrame
        else
            warn("PowerStone not found!")
        end
    end,
})

local ToggleChests = PlayerTab:CreateToggle({
    Name = "Show Chest Lines & Boxes",
    CurrentValue = false,
    Flag = "ChestLineBoxToggle",
    Callback = function(Value)
       local chestLine = nil
       local chestBox = nil
       local chestRunning = false

       local function createLineAndBoxToChest(chestPart)
          if chestLine then
             chestLine:Destroy()
          end
          if chestBox then
             chestBox:Destroy()
          end
          chestLine = Instance.new("Beam")
          chestLine.Parent = game.Workspace
          local attachment1 = Instance.new("Attachment", game.Players.LocalPlayer.Character.HumanoidRootPart)
          local attachment2 = Instance.new("Attachment", chestPart)
          attachment1.Position = Vector3.new(0, 1, 0)
          attachment2.Position = Vector3.new(0, 1, 0)
          chestLine.Attachment0 = attachment1
          chestLine.Attachment1 = attachment2
          chestLine.Color = ColorSequence.new(Color3.fromRGB(255, 105, 180))
          chestLine.Width0 = 0.2
          chestLine.Width1 = 0.2
          chestBox = Instance.new("BoxHandleAdornment")
          chestBox.Parent = chestPart
          chestBox.Size = chestPart.Size + Vector3.new(0.5, 0.5, 0.5)
          chestBox.Adornee = chestPart
          chestBox.Color3 = Color3.fromRGB(255, 105, 180)
          chestBox.Transparency = 0.5
          chestBox.ZIndex = 5
          chestBox.AlwaysOnTop = true
       end

       task.spawn(function()
          while true do
             if Value then
                if not chestRunning then
                   chestRunning = true
                   for _, part in pairs(workspace:GetChildren()) do
                      if part.Name == "Chest" and part:FindFirstChild("Body") then
                         createLineAndBoxToChest(part.Body)
                      end
                   end
                   workspace.ChildAdded:Connect(function(child)
                      if child.Name == "Chest" and child:FindFirstChild("Body") then
                         createLineAndBoxToChest(child.Body)
                      end
                   end)
                   while Value do
                      wait(1)
                   end
                   chestRunning = false
                end
             else
                if chestLine then
                   chestLine:Destroy()
                   chestLine = nil
                end
                if chestBox then
                   chestBox:Destroy()
                   chestBox = nil
                end
                break
             end
             wait(1)
          end
       end)
    end,
})

local TogglePlayers = PlayerTab:CreateToggle({
    Name = "Show Player Lines & Names",
    CurrentValue = false,
    Flag = "PlayerLineToggle",
    Callback = function(Value)
       local playerLines = {}
       local playerRunning = false

       local function createLineAndNameToPlayer(targetPlayer)
          local character = targetPlayer.Character
          if not character then return end
          local targetPart = character:WaitForChild("HumanoidRootPart")
          local line = Instance.new("Beam")
          line.Parent = game.Workspace
          local attachment1 = Instance.new("Attachment", game.Players.LocalPlayer.Character.HumanoidRootPart)
          local attachment2 = Instance.new("Attachment", targetPart)
          attachment1.Position = Vector3.new(0, 1, 0)
          attachment2.Position = Vector3.new(0, 1, 0)
          line.Attachment0 = attachment1
          line.Attachment1 = attachment2
          line.Color = ColorSequence.new(Color3.fromRGB(255, 165, 0))
          line.Width0 = 0.2
          line.Width1 = 0.2
          local billboard = Instance.new("BillboardGui")
          billboard.Parent = targetPart
          billboard.Adornee = targetPart
          billboard.Size = UDim2.new(0, 100, 0, 50)
          billboard.StudsOffset = Vector3.new(0, 3, 0)
          billboard.AlwaysOnTop = true
          local textLabel = Instance.new("TextLabel")
          textLabel.Parent = billboard
          textLabel.Size = UDim2.new(1, 0, 1, 0)
          textLabel.Text = targetPlayer.Name
          textLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
          textLabel.TextStrokeTransparency = 0.5
          textLabel.TextSize = 16
          textLabel.BackgroundTransparency = 1
          table.insert(playerLines, {line, billboard})
       end

       task.spawn(function()
          while true do
             if Value then
                if not playerRunning then
                   playerRunning = true
                   for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                      if targetPlayer ~= game.Players.LocalPlayer then
                         createLineAndNameToPlayer(targetPlayer)
                      end
                   end
                   game.Players.PlayerAdded:Connect(function(targetPlayer)
                      if targetPlayer ~= game.Players.LocalPlayer then
                         createLineAndNameToPlayer(targetPlayer)
                      end
                   end)
                   while Value do
                      wait(1)
                   end
                   playerRunning = false
                end
             else
                for _, data in ipairs(playerLines) do
                   data[1]:Destroy()
                   data[2]:Destroy()
                end
                playerLines = {}
                break
             end
             wait(1)
          end
       end)
    end,
})
